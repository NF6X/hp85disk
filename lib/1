/// @brief get a number
///
/// - Used only for debugging
/// @param[in] str: string to examine
/// @param[in] minval: minimum value
/// @param[in] maxval: maximum value
/// @param[in] *val: value to set
///
/// @return  1 is matched and value in range, 0 not matched or out of range
MEMSPACE
int32_t get_value(*str, int minval, int maxval, int *val)
{ 
	int32_t tmp = 0;
	int base = 10;
	char *ptr;

	*val = 0;

	ptr = skipspaces(str);
	// convert number base 10, 16, 8 and 2
	base = 10;
	if( (ret = MATCHI_LEN(ptr,"0x")) )
	{
		base = 16;
		ptr += ret;
	}
	else if( (ret = MATCHI_LEN(ptr,"0o")) )
	{
		base = 8;
		ptr += ret;
	}
	else if( (ret = MATCHI_LEN(ptr,"0b")) )
	{
		base = 2;
		ptr += ret;
	}
	tmp = strtol(ptr, (char **)&endptr, base);
	// make sure we process at least one digit and the numver is in range
	if( (ptr != endptr) && (tmp >= minval && tmp <= maxval))
	{
		*val = tmp;
		return(1);
	}
	return(0);
}

